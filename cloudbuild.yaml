steps:
# Install dependencies
- name: node:20-alpine
  entrypoint: npm
  args: ['install']

# Install Next.js as dev dependency
- name: node:20-alpine
  entrypoint: npm
  args: ['install', 'next', '--save-dev']
  waitFor: ['-']

# Build the Next.js app
- name: node:20-alpine
  entrypoint: npm
  args: ['run', 'build']
  env:
    - 'PROJECT_ID=${_PROJECT_ID}'
    - 'VERTEX_API_LOCATION=${_VERTEX_API_LOCATION}'
    - 'GCS_BUCKET_LOCATION=${_GCS_BUCKET_LOCATION}'
    - 'GEMINI_MODEL=${_GEMINI_MODEL}'
    - 'NEXT_PUBLIC_PRINCIPAL_TO_USER_FILTERS=${_NEXT_PUBLIC_PRINCIPAL_TO_USER_FILTERS}'
    - 'NEXT_PUBLIC_TEST_DEV_USER_ID=${_NEXT_PUBLIC_TEST_DEV_USER_ID}'
    - 'NEXT_PUBLIC_IMAGE_BUCKET_PREFIX=${_NEXT_PUBLIC_IMAGE_BUCKET_PREFIX}'
  waitFor: ['-']


# Build the final production image
- name: 'gcr.io/cloud-builders/docker'
  args: [
    'build',
    '-t',
    'img-studio',
    '--build-arg',
    'PROJECT_ID=${_PROJECT_ID}', # Pass the environment variable as a build arg
    '--build-arg',
    'VERTEX_API_LOCATION=${_VERTEX_API_LOCATION}',
    '--build-arg',
    'GCS_BUCKET_LOCATION=${_GCS_BUCKET_LOCATION}',
    '--build-arg',
    'GEMINI_MODEL=${_GEMINI_MODEL}',
    '--build-arg',
    'NEXT_PUBLIC_PRINCIPAL_TO_USER_FILTERS=${_NEXT_PUBLIC_PRINCIPAL_TO_USER_FILTERS}',
    '--build-arg',
    'NEXT_PUBLIC_TEST_DEV_USER_ID=${_NEXT_PUBLIC_TEST_DEV_USER_ID}',
    '--build-arg',
    'NEXT_PUBLIC_IMAGE_BUCKET_PREFIX=${_NEXT_PUBLIC_IMAGE_BUCKET_PREFIX}',
    '--build-arg',
    'NODE_ENV=production',
    '.'
  ]
  waitFor: ['-']

